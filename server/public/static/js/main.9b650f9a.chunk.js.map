{"version":3,"sources":["containers/App.js","serviceWorker.js","network/index.js","components/RoomStatusModal.js","components/PokerCard.js","components/CardStack.js","games/BlackJack/Player.js","games/BlackJack/index.js","containers/Room.jsx","games/BlackJack/BlackJackController.js","containers/Controller.js","index.js"],"names":["App","valueChange","value","_this","roomName","target","localStorage","setItem","console","log","onGameSelected","gameName","props","history","push","alert","this","getItem","_this2","gameList","BlackJack","defaultName","react_default","a","createElement","className","TextField","required","id","label","defaultValue","onChange","margin","variant","Object","keys","map","k","Button","color","key","onClick","React","Component","Boolean","window","location","hostname","match","ServerAddress","host","getModalStyle","top","concat","left","transform","justifyContent","alignItems","flexDirection","display","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","outline","root","list","button","right","RoomStatusModal","remote","open","back","connected","name","players","maxPlayerNumber","classes","_React$useState","useState","modalStyle","slicedToArray","Modal","style","IconButton","aria-label","Close_default","Typography","textAlign","lib_default","size","includeMargin","length","List","p","ListItem","ListItemText","primary","ListItemIcon","ready","Done_default","Error_default","generateList","justifyItems","CircularProgress","marginRight","posed","div","enter","opacity","exit","card","height","PokerCard","suit","show","styles","fileName","toLowerCase","src","alt","container","CardStack","cards","_ref","index","components_PokerCard","borderStyle","borderWidth","Player","_props$player","player","hand","money","handValue","bet","state","borderColor","components_CardStack","dealerContainer","paddingTop","boardContainer","flex","flexGrow","playerContainer","GameList","gameState","dealValue","dealHand","promotion","countDown","BlackJack_Player","Room","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleFullScreen","setState","prev","isFull","isStarted","shouldOpenRoomStatusModal","game","params","io","IO","on","emit","type","data","token","disconnect","_this3","GameContent","dist_default","enabled","onLeave","AppBar","Toolbar","Fullscreen_default","screen","actionContainer","marginBottom","buttonGroup","borderRadius","askButtonGroup","ControllerList","send","_React$useState2","thisBet","setThisBet","myStatus","b","Math","floor","payload","hit","stand","find","handleChange","event","newValue","stage","Slider","max","min","orientation","aria-labelledby","ButtonGroup","fullWidth","renderBet","Controller","playerName","onEnterClick","room","playing","onReady","onSendAction","renderGame","GameController","renderLogin","_this$props$match$par","Input","ReactDOM","render","react_router_dom","react_router","exact","path","component","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.9b650f9a.chunk.js","sourcesContent":["import React from 'react';\nimport {Button, TextField} from \"@material-ui/core\";\n\nimport './App.css';\n\n\nclass App extends React.Component {\n\n    roomName;\n\n    componentDidMount() {\n        this.roomName = localStorage.getItem('HE-room-name') || '';\n    }\n\n    valueChange = (value) => {\n        this.roomName = value.target.value;\n        localStorage.setItem('HE-room-name', value.target.value);\n        console.log(value.target.value);\n    };\n\n    onGameSelected = (gameName) => {\n\n        if(!this.roomName){\n            alert(\"房间名称为空！\");\n            return;\n        }\n        this.props.history.push('/room/'+gameName);\n\n    };\n\n    render() {\n\n        const gameList = {\n            BlackJack: '21 点',\n        };\n\n        const defaultName = localStorage.getItem('HE-room-name') || '';\n\n        return (\n            <div className=\"App\">\n                <h1>客厅娱乐系统</h1>\n                <div className='room-input'>\n                    <TextField\n                        required\n                        id=\"outlined-required\"\n                        label=\"房间名称\"\n                        defaultValue={defaultName}\n                        onChange={this.valueChange}\n                        margin=\"normal\"\n                        className='input'\n                        variant=\"outlined\"\n                    /></div>\n                <div className='game-container'>\n                    {\n                        Object.keys(gameList).map((k) => (\n                            <Button  variant=\"contained\" color=\"primary\" key={k} onClick={() => this.onGameSelected(k)}>{gameList[k]}</Button>\n                        ))\n                    }\n                </div>\n\n\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\n\r\nexport const ServerAddress = process.env.NODE_ENV === 'development' ? 'http://localhost:8000' :  window.location.host;\r\n","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {ServerAddress} from \"../network\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport QRCode from 'qrcode.react';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nfunction getModalStyle() {\r\n    return {\r\n        top: `${50}%`,\r\n        left: `${50}%`,\r\n        transform: `translate(-${50}%, -${50}%)`,\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        flexDirection:'column',\r\n        display:'flex',\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: '70vh',\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(4),\r\n        outline: 'none',\r\n    },\r\n    root: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    list: {\r\n\r\n        alignItems:'center',\r\n        width: '80%'\r\n    },\r\n    button: {\r\n        position:'absolute',\r\n        right:0,\r\n        top:0\r\n\r\n    }\r\n}));\r\n\r\nfunction generateList(players) {\r\n    return players.map((p) => (\r\n        <ListItem key={p.name}>\r\n            <ListItemText\r\n                primary={p.name}\r\n                color='primary'\r\n\r\n            />\r\n            <ListItemIcon>\r\n                {p.ready ? <DoneIcon  color='primary'/> : <ErrorIcon color=\"error\" />}\r\n            </ListItemIcon>\r\n        </ListItem>\r\n    ))\r\n}\r\n\r\nexport default function RoomStatusModal(props) {\r\n\r\n    const {remote, open, back, connected, gameName} = props;\r\n    const {name, players, maxPlayerNumber} = remote;\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    return (\r\n        <Modal open={open}>\r\n            {connected ?\r\n                <div style={modalStyle} className={classes.paper}>\r\n                    <IconButton className={classes.button} aria-label=\"Delete\" onClick={() => back()}>\r\n                        <CloseIcon  style={{color:'black'}}/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h4\" id=\"modal-title\" style={{ color:'black', textAlign:'center'}}>\r\n                    {name}\r\n                    </Typography>\r\n\r\n                    <QRCode value={ServerAddress + \"/controller/\"+name+\"/\"+gameName} size={258} includeMargin={true}/>\r\n                    <span>扫码加入</span>\r\n                    <Typography variant=\"h5\" id=\"modal-title\" style={{ color:'black', textAlign:'center'}}>\r\n                        Player: {players.length}/{maxPlayerNumber}\r\n                    </Typography>\r\n\r\n                    <List className={classes.list}>\r\n                        {generateList(players)}\r\n                    </List>\r\n                </div>\r\n                :\r\n                <div style={modalStyle} className={classes.paper}>\r\n                    <h2 style={{display:'flex', alignItems:'center', justifyItems:'center'}}><CircularProgress style={{marginRight:'5vh'}} color=\"secondary\"/>正在连接服务器</h2>\r\n                </div>\r\n            }\r\n        </Modal>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n//import svg from \"./cards/1_of_clubs.svg\";\r\nimport posed from 'react-pose';\r\nimport Sound from 'react-sound';\r\n\r\nconst Box = posed.div({\r\n    enter: {\r\n        opacity: 1,\r\n    },\r\n    exit: {\r\n        opacity: 0,\r\n    }\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n    card: {\r\n        height:'25vh',\r\n    }\r\n}));\r\n\r\nfunction PokerCard(props) {\r\n\r\n    const {suit, value, show} = props;\r\n    const styles = useStyles();\r\n    const fileName = show ? `${value}_of_${suit.toLowerCase()}` : 'back';\r\n\r\n    return (\r\n        <div>\r\n            <img src={`/cards/${fileName}.svg`} alt={fileName} className={styles.card}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokerCard;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n//import svg from \"./cards/1_of_clubs.svg\";\r\n\r\nimport PokerCard from \"./PokerCard\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        display:'flex',\r\n    },\r\n    card: {\r\n        width:'3vh',\r\n    }\r\n}));\r\n\r\nfunction CardStack(props) {\r\n\r\n    const {cards, style} = props;\r\n\r\n    const styles = useStyles();\r\n\r\n    return (\r\n        <div className={styles.container} style={style}>\r\n            {\r\n                cards.map(({suit, value, show}, index) => (<div className={styles.card} key={index}><PokerCard  value={value} suit={suit} show={show}/></div>))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardStack;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport CardStack from \"../../components/CardStack\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        width:'19%',\r\n        padding:3,\r\n        borderStyle:'solid',\r\n        borderWidth:3\r\n    },\r\n}));\r\n\r\nfunction Player(props) {\r\n\r\n    const {hand,name,money,handValue,bet,state} = props.player;\r\n    const styles = useStyles();\r\n\r\n    let borderColor = '#12752b';\r\n\r\n    switch (state) {\r\n        case '正在要牌':\r\n            borderColor = 'white';\r\n            break;\r\n        case '已经下注':\r\n            borderColor = '#140587';\r\n            break;\r\n        case '爆牌':\r\n            borderColor = '#a50b0b';\r\n            break;\r\n        case '庄家获胜':\r\n            borderColor = '#a50b0b';\r\n            break;\r\n        case '21点！':\r\n            borderColor = '#e2df06';\r\n            break;\r\n        case '玩家获胜！':\r\n            borderColor = '#e2df06';\r\n            break;\r\n        case '平局':\r\n            borderColor = '#42f4e5';\r\n            break;\r\n        default:\r\n            borderColor = '#12752b';\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container} style={{borderColor}}>\r\n            <Typography variant=\"h3\" id=\"modal-title\" style={{ color:'white', textAlign:'center'}}>\r\n                {name}\r\n            </Typography>\r\n            <Typography variant=\"h5\" id=\"modal-title\" style={{ color:'white', textAlign:'center'}}>\r\n                {handValue !== 0 && `手牌：${handValue}`}\r\n            </Typography>\r\n\r\n            <Typography variant=\"h6\" id=\"modal-title\" style={{ color:'white', textAlign:'center'}}>\r\n                本金：{money} 下注：{bet}\r\n            </Typography>\r\n            <CardStack cards={hand}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Player from './Player';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardStack from \"../../components/CardStack\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        display:'flex',\r\n        position:'float',\r\n        flexDirection:'column',\r\n        justifyContent:'space-around',\r\n        alignItems: 'center',\r\n        height:'100vh',\r\n        backgroundColor: '#12752b'\r\n    },\r\n    dealerContainer: {\r\n        paddingTop:'5vh',\r\n        height:'30vh',\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        justifyItems:'center',\r\n        width:'50%',\r\n        display:'flex',\r\n        flexDirection:' row',\r\n    },\r\n    boardContainer: {\r\n        flex: 2,\r\n        flexGrow: 2,\r\n        width:'100%',\r\n    },\r\n    playerContainer: {\r\n        width:'100%',\r\n        height:'40vh',\r\n        display:'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around'\r\n    },\r\n}));\r\n\r\nfunction BlackJack(props) {\r\n\r\n    const {state} = props;\r\n    const {gameState} = state;\r\n    const styles = useStyles();\r\n    console.log(\"black jack state\", state);\r\n    return (\r\n        <div className={styles.container}>\r\n\r\n            <div className={styles.dealerContainer}>\r\n                <Typography variant=\"h3\" id=\"modal-title\" style={{ color:'white', marginRight:'20%'}}>\r\n                    { gameState.dealValue !== 0 && gameState.dealValue} {gameState.dealValue > 21 && \"庄家爆牌！\"} {gameState.dealValue === 21 && \"庄家 Black Jack！\"}\r\n                </Typography>\r\n                <CardStack cards={gameState.dealHand}/>\r\n            </div>\r\n\r\n            <div className={styles.boardContainer}>\r\n                <Typography variant=\"h3\" id=\"modal-title\" style={{ color:'white', textAlign:'center'}}>\r\n                    {gameState.promotion}\r\n                </Typography>\r\n                <Typography variant=\"h1\" id=\"modal-title\" style={{ color:'white', textAlign:'center', margin:'2vh'}}>\r\n                    {gameState.countDown >= 0 && gameState.countDown}\r\n                </Typography>\r\n\r\n            </div>\r\n\r\n            <div className={styles.playerContainer}>\r\n                {\r\n                    gameState.players.map((player) => <Player player={player}/>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlackJack;\r\n","import RoomStatusModal from '../components/RoomStatusModal';\r\nimport {ServerAddress} from \"../network\";\r\nimport React from 'react';\r\nimport IO from 'socket.io-client';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Fullscreen from \"react-full-screen\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FullScreenIcon from '@material-ui/icons/Fullscreen';\r\n\r\nimport BlackJack from '../games/BlackJack';\r\n\r\n\r\nconst GameList = {\r\n    BlackJack: BlackJack,\r\n};\r\n\r\nclass Room extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            remote:{\r\n                name:'',\r\n                players:[],\r\n                gameState:{},\r\n                maxPlayerNumber: 0,\r\n                isStarted:false\r\n            },\r\n            isFull:false,\r\n            shouldOpenRoomStatusModal: true,\r\n            connected: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {game} = this.props.match.params;\r\n        const roomName = localStorage.getItem('HE-room-name');\r\n\r\n        this.io = new IO(ServerAddress);\r\n\r\n        this.io.on('connect', () => {\r\n           this.io.emit('CLIENT_LOGIN',{type:0, name:roomName, data: game, token: 111});\r\n           this.setState({connected:true});\r\n           this.io.on('SERVER_UPDATE', (data) => {\r\n                const shouldOpenRoomStatusModal = !data.isStarted;\r\n                this.setState({remote: data, shouldOpenRoomStatusModal});\r\n                console.log(\"Server Update:\", data);\r\n           });\r\n        });\r\n\r\n        this.io.on('disconnect', () => {\r\n            this.setState({connected:false, shouldOpenRoomStatusModal:true});\r\n        });\r\n    }\r\n\r\n    toggleFullScreen = () => {\r\n        this.setState((prev) => ({\r\n            isFull:!prev.isFull\r\n        }));\r\n    };\r\n\r\n    back = () => {\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        this.io.disconnect();\r\n    }\r\n\r\n    render() {\r\n        const roomName = localStorage.getItem('HE-room-name');\r\n        const {game} = this.props.match.params;\r\n\r\n        const GameContent = GameList[game];\r\n        return (\r\n            <Fullscreen\r\n                enabled={this.state.isFull}\r\n                onChange={isFull => this.setState({isFull})}\r\n                onLeave={this.back}\r\n            >\r\n                <div className='room-container'>\r\n                    <AppBar position=\"fixed\" color=\"primary\" style={{ justifyContent:'center', height:this.state.isFull? 25 : 50 }}>\r\n                        <Toolbar>\r\n                            <Typography variant=\"h6\" color=\"inherit\" style={{flex:1}}>\r\n                                {`${roomName} - ${game}`}\r\n                            </Typography>\r\n                            <IconButton aria-label=\"Full Screen\" onClick={this.toggleFullScreen}>\r\n                                <FullScreenIcon style={{color:'white'}}/>\r\n                            </IconButton>\r\n                            <IconButton aria-label=\"Back\" onClick={this.back}>\r\n                                <CloseIcon  style={{color:'white'}} />\r\n                            </IconButton>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <div className='room-game'>\r\n                        {\r\n                            this.state.remote.isStarted ? <GameContent state={this.state.remote} /> :\r\n                            <RoomStatusModal back={this.back} open={this.state.shouldOpenRoomStatusModal} remote={this.state.remote} connected={this.state.connected} gameName={game}/>}\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </Fullscreen>\r\n        )\r\n    }\r\n}\r\nexport default Room;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Slider from '@material-ui/lab/Slider';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        display:'flex',\r\n        flex:1,\r\n        width:'100%',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        textAlign:'center',\r\n        backgroundColor: '#ccc',\r\n        color:'black',\r\n        height:'100vh'\r\n    },\r\n\r\n    screen: {\r\n        flex:1,\r\n        width:'100%',\r\n    },\r\n\r\n    actionContainer: {\r\n        width:'100%',\r\n    },\r\n    bet: {\r\n        width:'100%',\r\n        height:'30vh',\r\n        marginBottom:'2vh',\r\n        display:'flex',\r\n        justifyContent: 'space-around',\r\n        alignItems:'center',\r\n        flexDirection: 'row'\r\n    },\r\n    buttonGroup:{\r\n        height:'10vmax',\r\n        width: '100vw',\r\n        borderRadius: 0,\r\n    },\r\n    askButtonGroup:{\r\n        width:'50vw',\r\n    }\r\n\r\n}));\r\n\r\n\r\n\r\nexport default function BlackJackController(props) {\r\n\r\n    const {state, send, name} = props;\r\n    const [thisBet, setThisBet] = React.useState(1);\r\n    const styles = useStyles();\r\n\r\n\r\n\r\n    const bet = () => {\r\n        const { money } = myStatus();\r\n        const b = Math.floor(money * (thisBet / 100));\r\n        send({type: 'PlayerBet', payload:b});\r\n    };\r\n\r\n    const hit = () => {\r\n        send({type: 'PlayerHit'});\r\n    };\r\n\r\n    const stand = () => {\r\n        send({type: 'PlayerStand'});\r\n    };\r\n\r\n    const myStatus = () => {\r\n        return state.players.find((p) => p.name === name);\r\n    };\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setThisBet(newValue);\r\n    };\r\n\r\n    const NoAction = () => {\r\n        return (<h4>当前没有可用操作</h4>);\r\n    };\r\n\r\n    const renderBet = () => {\r\n        const { money } = myStatus();\r\n        const b = Math.floor(money * (thisBet / 100));\r\n        return (\r\n            <div >\r\n                <div className={styles.bet}>\r\n                        <h2 style={{width:'100%'}}>{b}</h2>\r\n                        <Slider max={100} min={5} orientation=\"vertical\" value={thisBet} onChange={handleChange} aria-labelledby=\"下注\" />\r\n                </div>\r\n                <ButtonGroup variant=\"contained\" fullWidth color=\"primary\" className={styles.buttonGroup}>\r\n                    <Button  onClick={bet}>下注</Button>\r\n                </ButtonGroup>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const renderAsk = () => {\r\n        return (\r\n            <ButtonGroup variant=\"contained\" fullWidth color=\"primary\" className={styles.buttonGroup}>\r\n                <Button onClick={hit}>要牌</Button>\r\n                <Button onClick={stand}>结束</Button>\r\n            </ButtonGroup>\r\n        );\r\n    };\r\n\r\n    const renderAction = () => {\r\n\r\n        if(state.stage === 'BET' && myStatus().state !== '已经下注'){\r\n            return renderBet();\r\n        }\r\n        if(state.stage === 'ASK' && myStatus().state === '正在要牌'){\r\n            return renderAsk();\r\n        }\r\n        return NoAction();\r\n    };\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.screen}>\r\n                <h1>{name}</h1>\r\n                <h2>本金：{myStatus().money}</h2>\r\n                <h2>下注：{myStatus().bet}</h2>\r\n                <h4>{myStatus().state}</h4>\r\n\r\n            </div>\r\n\r\n            <div className={styles.actionContainer}>\r\n                {renderAction()}\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n\r\n\r\n}\r\n","import React from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from '@material-ui/core/Input';\r\nimport IO from 'socket.io-client';\r\nimport './Controller.css';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport {ServerAddress} from \"../network\";\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\n\r\nimport BlackJackController from '../games/BlackJack/BlackJackController';\r\n\r\n\r\nconst ControllerList = {\r\n    BlackJack: BlackJackController,\r\n};\r\n\r\nclass Controller extends React.Component {\r\n\r\n    playerName;\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            playing:false,\r\n            connected:false,\r\n            remote:{\r\n                name:'',\r\n                players:[],\r\n                gameState:{},\r\n                maxPlayerNumber: 0,\r\n                isStarted:false\r\n            }\r\n        };\r\n    }\r\n    generateList = (players) => {\r\n        return players.map((p) => (\r\n            <ListItem key={p.name}>\r\n                <ListItemText\r\n                    primary={p.name}\r\n                />\r\n                <ListItemIcon>\r\n                    {p.ready ? <DoneIcon  color='primary'/> : <ErrorIcon color=\"error\" />}\r\n                </ListItemIcon>\r\n            </ListItem>\r\n        ))\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.playerName = localStorage.getItem('HE-player-name') || '';\r\n    }\r\n\r\n    valueChange = (value) => {\r\n        this.playerName = value.target.value;\r\n        localStorage.setItem('HE-player-name', value.target.value);\r\n    };\r\n\r\n    onEnterClick = () => {\r\n        if(!this.playerName){\r\n            alert(\"玩家名称不能为空！\");\r\n            return;\r\n        }\r\n\r\n        const {room} = this.props.match.params;\r\n        this.io = new IO(ServerAddress);\r\n        this.io.on('connect', () => {\r\n\r\n            this.io.emit('CLIENT_LOGIN',{type:1, name:this.playerName, data: room, token: 111});\r\n\r\n            this.setState({playing:false,connected:true});\r\n\r\n            this.io.on('SERVER_UPDATE', (data) => {\r\n                const playing = data.isStarted;\r\n                this.setState({remote: data, playing});\r\n            });\r\n        });\r\n        this.io.on('disconnect', () => {\r\n            this.setState({connected:false, playing:false});\r\n        });\r\n    };\r\n\r\n    onReady = () => {\r\n        if(!!this.io){\r\n            this.io.emit('CLIENT_READY');\r\n        }\r\n    };\r\n\r\n    onSendAction = (payload) => {\r\n        if(!!this.io){\r\n            this.io.emit('CLIENT_ACTION', payload);\r\n        }\r\n    };\r\n\r\n    renderGame = () => {\r\n        const {game} = this.props.match.params;\r\n\r\n        const GameController = ControllerList[game];\r\n\r\n        return <GameController state={this.state.remote.gameState}  send={this.onSendAction} name={this.playerName}/>;\r\n    };\r\n\r\n    renderLogin = () => {\r\n        const defaultName = localStorage.getItem('HE-player-name') || '';\r\n        const {room, game} = this.props.match.params;\r\n        return (\r\n            this.state.connected ?\r\n            <div className=\"Controller\">\r\n                <div className=\"player-ready-container\">\r\n                    <h1>准备</h1>\r\n                    <List className='controller-player-list'>\r\n                        {this.generateList(this.state.remote.players)}\r\n                    </List>\r\n                </div>\r\n                <Button className=\"player-input-button\" variant=\"contained\" color=\"primary\" onClick={this.onReady}>就绪</Button>\r\n            </div>\r\n                :\r\n                <div className=\"Controller\">\r\n                    <div className=\"player-input-container\">\r\n                        <h1>{room} : {game}</h1>\r\n                        <div className='player-input'>\r\n                            <h2>玩家名称</h2>\r\n                            <Input\r\n                                defaultValue={defaultName}\r\n                                onChange={this.valueChange}\r\n                                className='input'\r\n                            /></div>\r\n                    </div>\r\n                    <Button className=\"player-input-button\" variant=\"contained\" color=\"primary\" onClick={this.onEnterClick}>开始</Button>\r\n                </div>)\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.playing ?\r\n                        this.renderGame()\r\n                        :\r\n                        this.renderLogin()\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Controller;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {Route, BrowserRouter as Router} from 'react-router-dom';\nimport Room from \"./containers/Room\";\nimport Controller from \"./containers/Controller\";\n\nconst Index = () => (\n        <Router>\n            <Route exact path='/' component={App}/>\n            <Route path='/room/:game' component={Room}/>\n            <Route exact path='/controller/:room/:game' component={Controller}/>\n        </Router>\n);\n\n\nReactDOM.render(<Index />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}